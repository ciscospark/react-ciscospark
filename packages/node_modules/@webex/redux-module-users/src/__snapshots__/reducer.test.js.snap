// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`redux-module-users reducer should handle FETCH_CURRENT_USER_REQUEST with id 1`] = `
Immutable.Map {
  "currentUserId": undefined,
  "byId": Immutable.Map {
    undefined: Immutable.Record {
      "id": undefined,
      "displayName": "",
      "nickName": "",
      "email": "",
      "orgId": "",
      "status": Object {
        "isFetching": true,
      },
    },
  },
  "byEmail": Immutable.Map {},
}
`;

exports[`redux-module-users reducer should handle FETCH_USER_REQUEST with email 1`] = `
Immutable.Map {
  "currentUserId": null,
  "byId": Immutable.Map {},
  "byEmail": Immutable.Map {
    "email1@cisco.com": "PENDING",
  },
}
`;

exports[`redux-module-users reducer should handle FETCH_USER_REQUEST with id 1`] = `
Immutable.Map {
  "currentUserId": null,
  "byId": Immutable.Map {
    "10000000-0000-0000-0000-000000000000": Immutable.Record {
      "id": undefined,
      "displayName": "",
      "nickName": "",
      "email": "",
      "orgId": "",
      "status": Object {
        "isFetching": true,
      },
    },
  },
  "byEmail": Immutable.Map {},
}
`;

exports[`redux-module-users reducer should handle STORE_CURRENT_USER 1`] = `
Immutable.Map {
  "currentUserId": "10000000-0000-0000-0000-000000000000",
  "byId": Immutable.Map {
    "10000000-0000-0000-0000-000000000000": Immutable.Record {
      "id": "10000000-0000-0000-0000-000000000000",
      "displayName": "Spark User 1",
      "nickName": "Spark 1",
      "email": "email1@cisco.com",
      "orgId": "00000000-org1-org2-org3-000000000000",
      "status": Object {
        "isFetching": false,
      },
    },
  },
  "byEmail": Immutable.Map {
    "email1@cisco.com": "10000000-0000-0000-0000-000000000000",
  },
}
`;

exports[`redux-module-users reducer should handle STORE_USER 1`] = `
Immutable.Map {
  "currentUserId": null,
  "byId": Immutable.Map {
    "10000000-0000-0000-0000-000000000000": Immutable.Record {
      "id": "10000000-0000-0000-0000-000000000000",
      "displayName": "Spark User 1",
      "nickName": "Spark 1",
      "email": "email1@cisco.com",
      "orgId": "00000000-org1-org2-org3-000000000000",
      "status": Object {
        "isFetching": false,
      },
    },
  },
  "byEmail": Immutable.Map {
    "email1@cisco.com": "10000000-0000-0000-0000-000000000000",
  },
}
`;

exports[`redux-module-users reducer should handle STORE_USERS 1`] = `
Immutable.Map {
  "currentUserId": null,
  "byId": Immutable.Map {
    "10000000-0000-0000-0000-000000000000": Immutable.Record {
      "id": "10000000-0000-0000-0000-000000000000",
      "displayName": "Spark User 1",
      "nickName": "Spark 1",
      "email": "email1@cisco.com",
      "orgId": "00000000-org1-org2-org3-000000000000",
      "status": Object {
        "isFetching": false,
      },
    },
    "20000000-0000-0000-0000-000000000000": Immutable.Record {
      "id": "20000000-0000-0000-0000-000000000000",
      "displayName": "Spark User 2",
      "nickName": "Spark 2",
      "email": "email2@cisco.com",
      "orgId": "00000000-org1-org2-org3-000000000000",
      "status": Object {
        "isFetching": false,
      },
    },
  },
  "byEmail": Immutable.Map {
    "email1@cisco.com": "10000000-0000-0000-0000-000000000000",
    "email2@cisco.com": "20000000-0000-0000-0000-000000000000",
  },
}
`;

exports[`redux-module-users reducer should return initial state 1`] = `
Immutable.Map {
  "currentUserId": null,
  "byId": Immutable.Map {},
  "byEmail": Immutable.Map {},
}
`;
