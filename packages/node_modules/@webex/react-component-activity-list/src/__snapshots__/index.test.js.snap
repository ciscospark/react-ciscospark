// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActivityList component renders properly 1`] = `
<div
  className="ciscospark-activity-list activityList"
>
  <ActivityItem
    activity={
      Object {
        "displayName": "Test Activity Content 1",
      }
    }
    actor={
      Object {
        "displayName": "Test User 1",
        "id": 1,
      }
    }
    actorId={1}
    adaptiveCardFeatureState="WIDGET_ADAPTIVE_CARD_OFF"
    id="test-123-123-123-123"
    isAdditional={false}
    isFlagPending={false}
    isFlagged={false}
    isPending={false}
    isSelf={true}
    name="Test User 1"
    onActivityDelete={[MockFunction]}
    onActivityFlag={[MockFunction]}
    sdkInstance={Object {}}
    timestamp="9/20/16, 7:52 PM"
    verb="post"
  />
  <ActivityItem
    activity={
      Object {
        "displayName": "Test Activity Content 2",
      }
    }
    actor={
      Object {
        "displayName": "Test User 2",
        "id": 2,
      }
    }
    actorId={2}
    adaptiveCardFeatureState="WIDGET_ADAPTIVE_CARD_OFF"
    id="test-456-123-456-123"
    isAdditional={true}
    isFlagged={false}
    isPending={false}
    isSelf={true}
    name="Test User 2"
    onActivityDelete={[MockFunction]}
    onActivityFlag={[MockFunction]}
    sdkInstance={Object {}}
    timestamp="9/20/16, 7:53 PM"
    verb="post"
  />
  <ActivityItem
    activity={
      Object {
        "displayName": "Test Activity Content 3",
      }
    }
    actor={
      Object {
        "displayName": "Test User 3",
        "id": 3,
      }
    }
    actorId={3}
    adaptiveCardFeatureState="WIDGET_ADAPTIVE_CARD_OFF"
    id="test-789-123-789-123"
    isAdditional={false}
    isFlagPending={false}
    isFlagged={true}
    isPending={true}
    isSelf={false}
    name="Test User 3"
    onActivityDelete={[MockFunction]}
    onActivityFlag={[MockFunction]}
    sdkInstance={Object {}}
    timestamp="9/20/16, 7:54 PM"
    verb="post"
  />
</div>
`;

exports[`ActivityList component renders properly if feature is  set 1`] = `
<div
  className="ciscospark-activity-list activityList"
>
  <ActivityItem
    activity={
      Object {
        "displayName": "Test Activity Content 1",
      }
    }
    actor={
      Object {
        "displayName": "Test User 1",
        "id": 1,
      }
    }
    actorId={1}
    adaptiveCardFeatureState="WIDGET_ADAPTIVE_CARD_ON"
    id="test-123-123-123-123"
    isAdditional={false}
    isFlagPending={false}
    isFlagged={false}
    isPending={false}
    isSelf={true}
    name="Test User 1"
    onActivityDelete={[MockFunction]}
    onActivityFlag={[MockFunction]}
    sdkInstance={Object {}}
    timestamp="9/20/16, 7:52 PM"
    verb="post"
  />
  <ActivityItem
    activity={
      Object {
        "displayName": "Test Activity Content 2",
      }
    }
    actor={
      Object {
        "displayName": "Test User 2",
        "id": 2,
      }
    }
    actorId={2}
    adaptiveCardFeatureState="WIDGET_ADAPTIVE_CARD_ON"
    id="test-456-123-456-123"
    isAdditional={true}
    isFlagged={false}
    isPending={false}
    isSelf={true}
    name="Test User 2"
    onActivityDelete={[MockFunction]}
    onActivityFlag={[MockFunction]}
    sdkInstance={Object {}}
    timestamp="9/20/16, 7:53 PM"
    verb="post"
  />
  <ActivityItem
    activity={
      Object {
        "displayName": "Test Activity Content 3",
      }
    }
    actor={
      Object {
        "displayName": "Test User 3",
        "id": 3,
      }
    }
    actorId={3}
    adaptiveCardFeatureState="WIDGET_ADAPTIVE_CARD_ON"
    id="test-789-123-789-123"
    isAdditional={false}
    isFlagPending={false}
    isFlagged={true}
    isPending={true}
    isSelf={false}
    name="Test User 3"
    onActivityDelete={[MockFunction]}
    onActivityFlag={[MockFunction]}
    sdkInstance={Object {}}
    timestamp="9/20/16, 7:54 PM"
    verb="post"
  />
</div>
`;

exports[`ActivityList component renders properly if feature is not set 1`] = `
<div
  className="ciscospark-activity-list activityList"
>
  <ActivityItem
    activity={
      Object {
        "displayName": "Test Activity Content 1",
      }
    }
    actor={
      Object {
        "displayName": "Test User 1",
        "id": 1,
      }
    }
    actorId={1}
    adaptiveCardFeatureState="WIDGET_ADAPTIVE_CARD_OFF"
    id="test-123-123-123-123"
    isAdditional={false}
    isFlagPending={false}
    isFlagged={false}
    isPending={false}
    isSelf={true}
    name="Test User 1"
    onActivityDelete={[MockFunction]}
    onActivityFlag={[MockFunction]}
    sdkInstance={Object {}}
    timestamp="9/20/16, 7:52 PM"
    verb="post"
  />
  <ActivityItem
    activity={
      Object {
        "displayName": "Test Activity Content 2",
      }
    }
    actor={
      Object {
        "displayName": "Test User 2",
        "id": 2,
      }
    }
    actorId={2}
    adaptiveCardFeatureState="WIDGET_ADAPTIVE_CARD_OFF"
    id="test-456-123-456-123"
    isAdditional={true}
    isFlagged={false}
    isPending={false}
    isSelf={true}
    name="Test User 2"
    onActivityDelete={[MockFunction]}
    onActivityFlag={[MockFunction]}
    sdkInstance={Object {}}
    timestamp="9/20/16, 7:53 PM"
    verb="post"
  />
  <ActivityItem
    activity={
      Object {
        "displayName": "Test Activity Content 3",
      }
    }
    actor={
      Object {
        "displayName": "Test User 3",
        "id": 3,
      }
    }
    actorId={3}
    adaptiveCardFeatureState="WIDGET_ADAPTIVE_CARD_OFF"
    id="test-789-123-789-123"
    isAdditional={false}
    isFlagPending={false}
    isFlagged={true}
    isPending={true}
    isSelf={false}
    name="Test User 3"
    onActivityDelete={[MockFunction]}
    onActivityFlag={[MockFunction]}
    sdkInstance={Object {}}
    timestamp="9/20/16, 7:54 PM"
    verb="post"
  />
</div>
`;
