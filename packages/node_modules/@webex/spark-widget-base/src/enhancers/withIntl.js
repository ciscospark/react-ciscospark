import React from 'react';
import {addLocaleData, IntlProvider, intlShape, injectIntl} from 'react-intl';

import {setWrappedDisplayName} from '@webex/react-component-utils';

export default function withIntl({
  messages,
  locale
}) {
  // eslint-disable-reason Dynamically loading locale data to lower overhead
  // eslint-disable-next-line import/no-dynamic-require, global-require
  const localeData = require(`react-intl/locale-data/${locale}`);

  addLocaleData(localeData);

  return (BaseComponent) => {
    const WrappedComponent = injectIntl(BaseComponent);

    function WithIntl(props) {
      return (
        <IntlProvider locale={locale} messages={messages} >
          <WrappedComponent {...props} />
        </IntlProvider>
      );
    }

    WrappedComponent.propTypes = {
      intl: intlShape
    };

    return setWrappedDisplayName('WithIntl')(WithIntl);
  };
}
