// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`widget-space redux actions basic actions #reloadWidget should reload the widget 1`] = `
Array [
  Object {
    "type": "widget-space/RELOAD_WIDGET",
  },
]
`;

exports[`widget-space redux actions basic actions #storeActivityTypes should store the activity types 1`] = `
Array [
  Object {
    "payload": Object {
      "activityTypes": Object {
        "activityTypes": Array [],
      },
    },
    "type": "widget-space/STORE_ACTIVITY_TYPES",
  },
]
`;

exports[`widget-space redux actions basic actions #storeDestination should store the destination type and id 1`] = `
Array [
  Object {
    "payload": Object {
      "id": "you@u.net",
      "type": "email",
    },
    "type": "widget-space/STORE_DESTINATION",
  },
]
`;

exports[`widget-space redux actions basic actions #toggleActivityMenuVisible should toggle the activity menu visible 1`] = `
Array [
  Object {
    "type": "widget-space/TOGGLE_ACTIVITY_MENU_VISIBLE",
  },
]
`;

exports[`widget-space redux actions basic actions #updateActivityType should update an activity type 1`] = `
Array [
  Object {
    "payload": Object {
      "type": Object {
        "type": "my-activity",
      },
    },
    "type": "widget-space/UPDATE_ACTIVITY_TYPE",
  },
]
`;

exports[`widget-space redux actions basic actions #updateSecondaryActivityType should update a secondary activity type 1`] = `
Array [
  Object {
    "payload": Object {
      "type": Object {
        "type": "my-activity",
      },
    },
    "type": "widget-space/UPDATE_ACTIVITY_TYPE_SECONDARY",
  },
]
`;

exports[`widget-space redux actions basic actions #updateWidgetStatus should store the activity types 1`] = `
Array [
  Object {
    "payload": Object {
      "status": Object {
        "status": Object {
          "mocked": true,
        },
      },
    },
    "type": "widget-space/UPDATE_WIDGET_STATUS",
  },
]
`;

exports[`widget-space redux actions has exported actions 1`] = `
Object {
  "FETCHING_SPACE_DETAILS": "widget-space/FETCHING_SPACE_DETAILS",
  "RELOAD_WIDGET": "widget-space/RELOAD_WIDGET",
  "STORE_ACTIVITY_TYPES": "widget-space/STORE_ACTIVITY_TYPES",
  "STORE_DESTINATION": "widget-space/STORE_DESTINATION",
  "STORE_SPACE_DETAILS": "widget-space/STORE_SPACE_DETAILS",
  "TOGGLE_ACTIVITY_MENU_VISIBLE": "widget-space/TOGGLE_ACTIVITY_MENU_VISIBLE",
  "UPDATE_ACTIVITY_MENU_VISIBLE": "widget-space/UPDATE_ACTIVITY_MENU_VISIBLE",
  "UPDATE_ACTIVITY_TYPE": "widget-space/UPDATE_ACTIVITY_TYPE",
  "UPDATE_ACTIVITY_TYPE_SECONDARY": "widget-space/UPDATE_ACTIVITY_TYPE_SECONDARY",
  "UPDATE_WIDGET_STATUS": "widget-space/UPDATE_WIDGET_STATUS",
  "getSpaceDetails": [Function],
  "reloadWidget": [Function],
  "storeActivityTypes": [Function],
  "storeDestination": [Function],
  "toggleActivityMenuVisible": [Function],
  "updateActivityMenuVisible": [Function],
  "updateActivityType": [Function],
  "updateSecondaryActivityType": [Function],
  "updateWidgetStatus": [Function],
}
`;

exports[`widget-space redux actions thunked actions #getSpaceDetails should fetch and store details about a space 1`] = `
Array [
  Object {
    "type": "widget-space/FETCHING_SPACE_DETAILS",
  },
  Object {
    "payload": Object {
      "details": "mocked response body",
    },
    "type": "widget-space/STORE_SPACE_DETAILS",
  },
]
`;

exports[`widget-space redux actions thunked actions #getSpaceDetails should not fetch details about direct email spaces 1`] = `
Array [
  Object {
    "payload": Object {
      "details": Object {
        "type": "direct",
      },
    },
    "type": "widget-space/STORE_SPACE_DETAILS",
  },
]
`;
