// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`redux-module-search actions #searchForUser can search a user 1`] = `
Array [
  Object {
    "payload": Object {
      "searchTerm": "myuser",
    },
    "type": "search/STORE_SEARCH_TERM",
  },
  Object {
    "payload": Object {
      "searchResults": Array [
        "myuser",
      ],
      "searchTerm": "myuser",
    },
    "type": "search/STORE_SEARCH_RESULTS",
  },
]
`;

exports[`redux-module-search actions #searchForUser should search via hydra for emails 1`] = `
Array [
  Object {
    "payload": Object {
      "searchTerm": "test-user@cisco.com",
    },
    "type": "search/STORE_SEARCH_TERM",
  },
  Object {
    "payload": Object {
      "searchResults": Array [
        Object {
          "displayName": "Test User",
          "id": "test-user",
          "name": "Test User",
        },
      ],
      "searchTerm": "test-user@cisco.com",
    },
    "type": "search/STORE_SEARCH_RESULTS",
  },
]
`;

exports[`redux-module-search reducer should handle STORE_SEARCH_ERROR 1`] = `
Immutable.Map {
  "error": [Error: unable to search],
  "status": Immutable.Map {
    "isError": true,
  },
  "searchResults": Immutable.Map {},
}
`;

exports[`redux-module-search reducer should handle STORE_SEARCH_RESULTS 1`] = `
Immutable.Map {
  "error": null,
  "status": Immutable.Map {
    "isError": false,
  },
  "searchResults": Immutable.Map {
    "mysearch": Immutable.Map {
      "inProgress": false,
      "date": 1483228800000,
      "results": Immutable.List [
        "abc",
        "123",
      ],
    },
  },
}
`;

exports[`redux-module-search reducer should handle STORE_SEARCH_TERM 1`] = `
Immutable.Map {
  "error": null,
  "status": Immutable.Map {
    "isError": false,
  },
  "searchResults": Immutable.Map {
    "mysearch": Immutable.Map {
      "inProgress": true,
    },
  },
}
`;

exports[`redux-module-search reducer should return initial state 1`] = `
Immutable.Map {
  "error": null,
  "status": Immutable.Map {
    "isError": false,
  },
  "searchResults": Immutable.Map {},
}
`;

exports[`redux-module-search reducer should update existing results when calling STORE_SEARCH_RESULTS 1`] = `
Immutable.Map {
  "error": null,
  "status": Immutable.Map {
    "isError": false,
  },
  "searchResults": Immutable.Map {
    "mysearch": Immutable.Map {
      "inProgress": false,
      "date": 1483228800000,
      "results": Immutable.List [
        "def",
        "456",
      ],
    },
  },
}
`;
