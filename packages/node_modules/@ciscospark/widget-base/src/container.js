import React, {Component, PropTypes} from 'react';
import {Provider} from 'react-redux';
import {injectIntl, addLocaleData, IntlProvider} from 'react-intl';
import enLocaleData from 'react-intl/locale-data/en';

import {injectSpark} from '@ciscospark/react-redux-spark';

import '@ciscospark/react-component-spark-fonts';
import './styles.css';

export default class CiscoSparkWidget extends Component {

  shouldComponentUpdate(nextProps) {
    return this.props.store !== nextProps.store;
  }

  render() {
    const {
      translationMessages,
      store,
      children
    } = this.props;
    addLocaleData(enLocaleData);
    let component = injectSpark(children);
    if (store) {
      component = <Provider store={store}>{component}</Provider>;
    }
    if (translationMessages) {
      component = <IntlProvider locale="en" messages={translationMessages}>{injectIntl(component)}</IntlProvider>;
    }
    return component;
  }
}

CiscoSparkWidget.propTypes = {
  children: PropTypes.element,
  store: PropTypes.object,
  translationMessages: PropTypes.object
};
