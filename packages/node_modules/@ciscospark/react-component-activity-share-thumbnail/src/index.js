import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import Button from '@ciscospark/react-component-button';
import {ICONS} from '@ciscospark/react-component-icon';
import {bytesToSize} from '@ciscospark/react-component-utils';

import {Spinner} from '@collab-ui/react';

import styles from './styles.css';

const propTypes = {
  file: PropTypes.shape({
    displayName: PropTypes.string,
    fileSize: PropTypes.number,
    objectType: PropTypes.string
  }).isRequired,
  isFetching: PropTypes.bool,
  isPending: PropTypes.bool,
  objectUrl: PropTypes.string,
  onDownloadClick: PropTypes.func.isRequired
};

const defaultProps = {
  isFetching: false,
  isPending: false,
  objectUrl: ''
};

function ActivityShareThumbnail(props) {
  const {
    file,
    isFetching,
    isPending,
    objectUrl,
    onDownloadClick
  } = props;

  const {
    displayName,
    fileSize,
    objectType
  } = file;

  let image;

  if (!isFetching && objectUrl) {
    image = <img alt={`Uploaded File ${displayName}`} src={objectUrl} />;
  }

  else if (isFetching) {
    image = <div className={classNames('ciscospark-spinner-container')}><Spinner /></div>;
  }

  function handleDownloadClick() {
    onDownloadClick(file);
  }

  let shareItemActions;
  if (!isPending) {
    shareItemActions = (
      <div className={classNames('ciscospark-share-item-actions', styles.shareActions)}>
        <div className={classNames('ciscospark-share-action-item', styles.shareActionItem)}>
          <Button
            buttonClassName={styles.downloadButton}
            iconType={ICONS.ICON_TYPE_DOWNLOAD}
            onClick={handleDownloadClick}
            title="Download this file"
          />
        </div>
      </div>
    );
  }

  return (
    <div className={classNames('ciscospark-activity-share-item', styles.shareItem)}>
      <div className={classNames('ciscospark-share-thumbnail', styles.thumbnail)}>
        {image}
      </div>
      <div className={classNames('ciscospark-share-meta', styles.meta)}>
        <div className={classNames('ciscospark-share-file-info', styles.fileInfo)}>
          <div className={classNames('ciscospark-share-name', styles.name)}>{displayName}</div>
          <div className={classNames('ciscospark-share-file-props', styles.fileProps)}>
            <span className={classNames('ciscospark-share-file-size', styles.fileSize)}>{bytesToSize(fileSize)}</span>
            <span className={classNames('ciscospark-share-file-type', styles.fileType)}>{objectType}</span>
          </div>
        </div>
        {shareItemActions}
      </div>
    </div>
  );
}

ActivityShareThumbnail.propTypes = propTypes;
ActivityShareThumbnail.defaultProps = defaultProps;

export default ActivityShareThumbnail;
