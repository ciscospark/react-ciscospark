import React, {PropTypes} from 'react';
import ReactDOM from 'react-dom';
// Import base widget
import CiscoSparkWidget, {initStore, registerWidget} from '@ciscospark/widget-base';

// Get this widget's container, reducer, and translated text
import ExampleWidget from './container';
import reducers from './reducer';
import enTranslationMessages from './translations/en';

// Declare all props for this widget
const propTypes = {
  someText: PropTypes.string,
  store: PropTypes.object
};

export default function Root(props) {
  const {
    someText,
    store
  } = props;

  return (
    <CiscoSparkWidget
      store={store}
      translationMessages={enTranslationMessages}
    >
      <ExampleWidget
        someText={someText}
      />
    </CiscoSparkWidget>
  );
}

Root.defaultProps = {
  store: initStore(reducers)
};

Root.propTypes = propTypes;

export function initWidget(element, props) {
  ReactDOM.render(
    <Root {...props} />, element
  );
  return element;
}

export function removeWidget(el) {
  ReactDOM.unmountComponentAtNode(el);
}

// Create function to inject React component into DOM
registerWidget(`exampleWidget`, initWidget, removeWidget);
