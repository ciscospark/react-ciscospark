import {combineReducers} from 'redux';
import {fromJS} from 'immutable';

import media from '@ciscospark/redux-module-media';
import conversation from '@ciscospark/redux-module-conversation';
import {reducer as notifications} from '@ciscospark/react-container-notifications';
import avatar from '@ciscospark/redux-module-avatar';
import mercury from '@ciscospark/redux-module-mercury';

import {
  UPDATE_LOCAL_VIDEO_POSITION,
  UPDATE_WIDGET_STATUS
} from './actions';

export const initialState = fromJS({
  localVideoPosition: {x: 0, y: 0},
  status: {
    hasOpenWithCall: false
  }
});

export function reducer(state = initialState, action) {
  switch (action.type) {
  case UPDATE_LOCAL_VIDEO_POSITION:
    return state.set(`localVideoPosition`, action.payload.position);
  case UPDATE_WIDGET_STATUS:
    return state.mergeIn([`status`], action.payload.status);

  default:
    return state;
  }
}

export const reducers = {
  media,
  conversation,
  avatar,
  mercury,
  notifications,
  widgetMeet: reducer
};

export default combineReducers(reducers);
