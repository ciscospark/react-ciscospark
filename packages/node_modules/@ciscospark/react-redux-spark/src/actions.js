import {metrics} from '@ciscospark/react-component-utils';

export const UPDATE_SPARK_STATUS = `spark/UPDATE_SPARK_STATUS`;
export function updateSparkStatus(status) {
  return {
    type: UPDATE_SPARK_STATUS,
    payload: {
      status
    }
  };
}

export const STORE_SPARK_INSTANCE = `spark/STORE_SPARK_INSTANCE`;
export function storeSparkInstance(spark) {
  return {
    type: STORE_SPARK_INSTANCE,
    payload: {
      spark
    }
  };
}

const metricName = {
  REGISTER_DEVICE_START: `registerDevice:start`,
  REGISTER_DEVICE_END: `registerDevice:end`,
  REGISTER_DEVICE_DURATION: `registerDevice:duration`
};

export function registerDevice(spark) {
  return (dispatch) => {
    metrics.saveElapsedTime(metricName.REGISTER_DEVICE_START);
    metrics.sendTempMetric(metricName.REGISTER_DEVICE_START, spark);
    dispatch(updateSparkStatus({registering: true}));
    return spark.device.register()
      .then(() => {
        metrics.saveElapsedTime(metricName.REGISTER_DEVICE_END);
        metrics.sendTempMetric(metricName.REGISTER_DEVICE_END, spark);
        metrics.sendDurationMetric(
          metricName.REGISTER_DEVICE_DURATION,
          metricName.REGISTER_DEVICE_START,
          metricName.REGISTER_DEVICE_END,
          spark
        );
        return dispatch(updateSparkStatus({registering: false, registered: true}));
      });
  };
}
