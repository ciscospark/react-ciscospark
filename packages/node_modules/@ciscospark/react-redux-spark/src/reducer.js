import {fromJS} from 'immutable';

import {
  REGISTER_DEVICE_FAILURE,
  STORE_SPARK_INSTANCE,
  UPDATE_SPARK_STATUS
} from './actions';

export const initialState = fromJS({
  error: null,
  status: {
    authenticated: false,
    authenticating: false,
    registered: false,
    registerError: false,
    registering: false
  },
  spark: null
});

export default function reducer(state = initialState, action) {
  switch (action.type) {

  case UPDATE_SPARK_STATUS:
    return state.mergeDeep({
      status: action.payload.status
    });

  case STORE_SPARK_INSTANCE:
    return state.set(`spark`, action.payload.spark);

  case REGISTER_DEVICE_FAILURE:
    return state.set(`error`, fromJS(action.payload.error))
    .setIn([`status`, `registerError`], true)
    .setIn([`status`, `registering`], false);

  default:
    return state;
  }
}
