/* eslint camelcase: [0] */

import '@ciscospark/plugin-logger';
import '@ciscospark/internal-plugin-mercury';
import '@ciscospark/plugin-people';
import '@ciscospark/internal-plugin-conversation';
import '@ciscospark/plugin-phone';
import '@ciscospark/internal-plugin-metrics';
import '@ciscospark/internal-plugin-flag';
import '@ciscospark/internal-plugin-feature';
import Spark from '@ciscospark/spark-core';
import LocalForageStoreAdapter from '@ciscospark/storage-adapter-local-forage';

export default function createSpark(accessToken, options = {}) {
  // Check if we already have a spark instance in memory
  let ciscosparkInstance = window.ciscosparkInstance;

  if (typeof ciscosparkInstance !== `object`) {
    const credentials = JSON.parse(localStorage.getItem(`credentials`) || false);
    ciscosparkInstance = new Spark({
      credentials: {
        authorization: {
          access_token: accessToken || credentials.access_token
        }
      },
      config: {
        appName: `spark-widgets`,
        appVersion: process.env.REACT_CISCOSPARK_VERSION,
        device: {
          ephemeral: true
        },
        logger: {
          level: options.logLevel || process.env.NODE_ENV === `production` ? `silent` : `trace`
        },
        conversation: {
          allowedInboundTags: {
            'spark-mention': [`data-object-type`, `data-object-id`, `data-object-url`],
            a: [`href`],
            b: [],
            blockquote: [`class`],
            strong: [],
            i: [],
            em: [],
            pre: [],
            code: [],
            br: [],
            hr: [],
            p: [],
            ul: [],
            ol: [],
            li: [],
            h1: [],
            h2: [],
            h3: []
          },
          allowedOutboundTags: {
            'spark-mention': [`data-object-type`, `data-object-id`, `data-object-url`],
            a: [`href`],
            b: [],
            blockquote: [`class`],
            strong: [],
            i: [],
            em: [],
            pre: [],
            code: [],
            br: [],
            hr: [],
            p: [],
            ul: [],
            ol: [],
            li: [],
            h1: [],
            h2: [],
            h3: []
          }
        },
        storage: {
          unboundedAdapter: new LocalForageStoreAdapter(`ciscospark-widgets`)
        }
      }
    });
    window.ciscosparkInstance = ciscosparkInstance;
  }

  return ciscosparkInstance;
}
