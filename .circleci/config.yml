# Main Config
version: 2

base_image: &base_image
  image: circleci/node:8.11.3

job_common: &job_common
  docker:
    - <<: *base_image

restore_workspace: &restore_workspace
  attach_workspace:
    at: /tmp/workspace

restore_node_modules: &restore_node_modules
  run:
    name: Link cached node_modules to project
    command: mv /tmp/workspace/node_modules ./ || true

jobs:
  install:
    <<: *job_common
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      - run:
          name: Install dependencies
          command: |
            if [ ! -d node_modules ]; then
              npm install
            fi
      - run:
          name: Copy node_modules to workspace
          command: mv node_modules /tmp/
      - persist_to_workspace:
          root: /tmp
          paths:
            - node_modules
      - run:
          name: Save NPM install log
          command: npm ls --json > /tmp/npm_install.log || true
      - store_artifacts:
          path: /tmp/npm_install.log
          destination: npm-install
  unit_tests_and_linting:
    <<: *job_common
    steps:
      - checkout
      - <<: *restore_workspace
      - <<: *restore_node_modules
      - run:
          name: Run eslint
          command: npm run eslint -- --format junit -o reports/junit/js-lint-results.xml
      - run:
          name: Run all Jest test suites
          command: npm run jest -- --ci -i --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: reports/junit/jest/js-jest-results.xml
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
          destination: junit

  build_for_tests:
    <<: *job_common
    environment:
      - NODE_ENV: "test"
      - ACL_SERVICE_URL: "https://acl-intb.ciscospark.com/acl/api/v1"
      - ATLAS_SERVICE_URL: "https://atlas-intb.ciscospark.com/admin/api/v1"
      - CONVERSATION_SERVICE: "https://conversation-intb.ciscospark.com/conversation/api/v1"
      - ENCRYPTION_SERVICE_URL: "https://encryption-intb.ciscospark.com/encryption/api/v1"
      - IDBROKER_BASE_URL: "https://idbrokerbts.webex.com"
      - IDENTITY_BASE_URL: "https://identitybts.webex.com"
      - HYDRA_SERVICE_URL: "https://apialpha.ciscospark.com/v1/"
      - WDM_SERVICE_URL: "https://wdm-intb.ciscospark.com/wdm/api/v1"

    steps:
      - checkout
      - <<: *restore_workspace
      - <<: *restore_node_modules
      - run:
          name: Copy and build journey test static files
          command: npm run build journey /tmp/dist-test
      - persist_to_workspace:
          root: /tmp
          paths:
            - dist-test

  journey_tests_chrome:
    <<: *job_common
    environment:
      SAUCE: true
      STATIC_SERVER_PATH: /tmp/workspace/dist-test
    steps:
      - checkout
      - <<: *restore_workspace
      - <<: *restore_node_modules
      - run: echo "export BUILD_NUMBER=circle-ci-${CIRCLE_BUILD_NUM}" >> $BASH_ENV
      - run:
          name: Integration Tests Chrome
          no_output_timeout: 15m
          command: |
            set -em
            BROWSER=chrome npm run test:integration
      - store_test_results:
          path: reports/junit/wdio
      - store_artifacts:
          path: reports/junit/wdio
          destination: wdio
      - store_artifacts:
          path: /home/circleci/.npm/_logs/
          destination: npm-logs
      - store_artifacts:
          path: reports/browser
          destination: browser

  journey_tests_firefox:
    <<: *job_common
    environment:
      SAUCE: true
      STATIC_SERVER_PATH: /tmp/workspace/dist-test
    steps:
      - checkout
      - <<: *restore_workspace
      - <<: *restore_node_modules
      - run: echo "export BUILD_NUMBER=circle-ci-${CIRCLE_BUILD_NUM}" >> $BASH_ENV
      - run:
          name: Integration Tests Firefox
          no_output_timeout: 15m
          command: |
            set -em
            BROWSER=firefox npm run test:integration
      - store_test_results:
          path: reports/junit/wdio
      - store_artifacts:
          path: reports/junit/wdio
          destination: wdio
      - store_artifacts:
          path: /home/circleci/.npm/_logs/
          destination: npm-logs
      - store_artifacts:
          path: reports/browser
          destination: browser


workflows:
  version: 2
  run_all_tests:
    jobs:
      - install
      - build_for_tests:
          requires:
            - install
      - unit_tests_and_linting:
          requires:
            - install
      - journey_tests_chrome:
          requires:
            - build_for_tests
      - journey_tests_firefox:
          requires:
            - build_for_tests
